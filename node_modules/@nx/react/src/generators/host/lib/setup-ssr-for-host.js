"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupSsrForHost = void 0;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("../../../utils/versions");
async function setupSsrForHost(tree, options, appName, defaultRemoteManifest) {
    const tasks = [];
    let project = (0, devkit_1.readProjectConfiguration)(tree, appName);
    project.targets.serve.executor = '@nx/react:module-federation-ssr-dev-server';
    (0, devkit_1.updateProjectConfiguration)(tree, appName, project);
    const pathToModuleFederationSsrFiles = options.typescriptConfiguration
        ? 'module-federation-ssr-ts'
        : 'module-federation-ssr';
    (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, `../files/${pathToModuleFederationSsrFiles}`), project.root, {
        ...options,
        static: !options?.dynamic,
        remotes: defaultRemoteManifest.map(({ name, port }) => {
            return {
                ...(0, devkit_1.names)(name),
                port,
            };
        }),
        appName,
        tmpl: '',
        browserBuildOutputPath: project.targets.build.options.outputPath,
    });
    const installTask = (0, devkit_1.addDependenciesToPackageJson)(tree, {
        '@module-federation/node': versions_1.moduleFederationNodeVersion,
    }, {});
    tasks.push(installTask);
    return (0, devkit_1.runTasksInSerial)(...tasks);
}
exports.setupSsrForHost = setupSsrForHost;
