"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addRollupBuildTarget = void 0;
const devkit_1 = require("@nx/devkit");
const maybe_js_1 = require("./maybe-js");
const versions_1 = require("../../../utils/versions");
async function addRollupBuildTarget(host, options) {
    const tasks = [];
    const { configurationGenerator } = (0, devkit_1.ensurePackage)('@nx/rollup', versions_1.nxVersion);
    tasks.push(await configurationGenerator(host, {
        ...options,
        project: options.name,
        skipFormat: true,
    }));
    if (!options.skipPackageJson) {
        // These are used in `@nx/react/plugins/bundle-rollup`
        tasks.push((0, devkit_1.addDependenciesToPackageJson)(host, {}, {
            '@rollup/plugin-url': versions_1.rollupPluginUrlVersion,
            '@svgr/rollup': versions_1.svgrRollupVersion,
        }));
    }
    const { targets } = (0, devkit_1.readProjectConfiguration)(host, options.name);
    const external = ['react', 'react-dom'];
    if (options.style === '@emotion/styled') {
        external.push('@emotion/react/jsx-runtime');
    }
    else {
        external.push('react/jsx-runtime');
    }
    targets.build = {
        executor: '@nx/rollup:rollup',
        outputs: ['{options.outputPath}'],
        options: {
            outputPath: (0, devkit_1.joinPathFragments)('dist', options.projectRoot),
            tsConfig: `${options.projectRoot}/tsconfig.lib.json`,
            project: `${options.projectRoot}/package.json`,
            entryFile: (0, maybe_js_1.maybeJs)(options, `${options.projectRoot}/src/index.ts`),
            external,
            rollupConfig: `@nx/react/plugins/bundle-rollup`,
            compiler: options.compiler ?? 'babel',
            assets: [
                {
                    glob: `${options.projectRoot}/README.md`,
                    input: '.',
                    output: '.',
                },
            ],
        },
    };
    (0, devkit_1.updateProjectConfiguration)(host, options.name, {
        root: options.projectRoot,
        sourceRoot: (0, devkit_1.joinPathFragments)(options.projectRoot, 'src'),
        projectType: 'library',
        tags: options.parsedTags,
        targets,
    });
    return (0, devkit_1.runTasksInSerial)(...tasks);
}
exports.addRollupBuildTarget = addRollupBuildTarget;
