"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const export_1 = require("next/dist/export");
const nextTrace = require("next/dist/trace");
const os_1 = require("os");
const child_process_1 = require("child_process");
const chalk = require("chalk");
const semver_1 = require("semver");
// platform specific command name
const pmCmd = (0, os_1.platform)() === 'win32' ? `npx.cmd` : 'npx';
/**
 * @deprecated use output inside of your next.config.js
 * Example
 * const nextConfig = {
  nx: {
    svgr: false,
  },

  output: 'export'
};
 * Read https://nextjs.org/docs/pages/building-your-application/deploying/static-exports
 **/
async function exportExecutor(options, context) {
    const nextJsVersion = require('next/package.json').version;
    if ((0, semver_1.satisfies)(nextJsVersion, '>=14.0.0')) {
        throw new Error('The export command has been removed in Next.js 14. Please update your Next config to use the output property. Read more: https://nextjs.org/docs/pages/building-your-application/deploying/static-exports');
    }
    // Returns { project: ProjectGraphNode; target: string; configuration?: string;}
    const buildTarget = (0, devkit_1.parseTargetString)(options.buildTarget, context);
    try {
        const buildTargetName = (0, devkit_1.targetToTargetString)(buildTarget);
        const args = getBuildTargetCommand(buildTargetName);
        (0, child_process_1.execFileSync)(pmCmd, args, {
            stdio: [0, 1, 2],
        });
    }
    catch {
        throw new Error(`Build target failed: ${chalk.bold(options.buildTarget)}`);
    }
    const buildOptions = (0, devkit_1.readTargetOptions)(buildTarget, context);
    const projectRoot = context.projectGraph.nodes[context.projectName].data.root;
    // Taken from:
    // https://github.com/vercel/next.js/blob/ead56eaab68409e96c19f7d9139747bac1197aa9/packages/next/cli/next-export.ts#L13
    const nextExportCliSpan = nextTrace.trace('next-export-cli');
    await (0, export_1.default)(projectRoot, {
        statusMessage: 'Exporting',
        silent: options.silent,
        threads: options.threads,
        outdir: `${buildOptions.outputPath}/exported`,
    }, nextExportCliSpan);
    return { success: true };
}
exports.default = exportExecutor;
function getBuildTargetCommand(buildTarget) {
    const cmd = ['nx', 'run', buildTarget];
    return cmd;
}
