"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addE2e = void 0;
const devkit_1 = require("@nx/devkit");
const eslint_1 = require("@nx/eslint");
const versions_1 = require("../../../utils/versions");
async function addE2e(host, options) {
    const nxJson = (0, devkit_1.readNxJson)(host);
    const hasPlugin = nxJson.plugins?.some((p) => typeof p === 'string'
        ? p === '@nx/next/plugin'
        : p.plugin === '@nx/next/plugin');
    if (options.e2eTestRunner === 'cypress') {
        const { configurationGenerator } = (0, devkit_1.ensurePackage)('@nx/cypress', versions_1.nxVersion);
        (0, devkit_1.addProjectConfiguration)(host, options.e2eProjectName, {
            root: options.e2eProjectRoot,
            sourceRoot: (0, devkit_1.joinPathFragments)(options.e2eProjectRoot, 'src'),
            targets: {},
            tags: [],
            implicitDependencies: [options.projectName],
        });
        return configurationGenerator(host, {
            ...options,
            linter: eslint_1.Linter.EsLint,
            project: options.e2eProjectName,
            directory: 'src',
            skipFormat: true,
            devServerTarget: `${options.projectName}:${hasPlugin ? 'start' : 'serve'}`,
            baseUrl: `http://localhost:${hasPlugin ? '3000' : '4200'}`,
            jsx: true,
        });
    }
    else if (options.e2eTestRunner === 'playwright') {
        const { configurationGenerator } = (0, devkit_1.ensurePackage)('@nx/playwright', versions_1.nxVersion);
        (0, devkit_1.addProjectConfiguration)(host, options.e2eProjectName, {
            root: options.e2eProjectRoot,
            sourceRoot: (0, devkit_1.joinPathFragments)(options.e2eProjectRoot, 'src'),
            targets: {},
            implicitDependencies: [options.projectName],
        });
        return configurationGenerator(host, {
            project: options.e2eProjectName,
            skipFormat: true,
            skipPackageJson: options.skipPackageJson,
            directory: 'src',
            js: false,
            linter: options.linter,
            setParserOptionsProject: options.setParserOptionsProject,
            webServerAddress: `http://127.0.0.1:${hasPlugin ? '3000' : '4200'}`,
            webServerCommand: `${(0, devkit_1.getPackageManagerCommand)().exec} nx ${hasPlugin ? 'start' : 'serve'} ${options.projectName}`,
        });
    }
    return () => { };
}
exports.addE2e = addE2e;
