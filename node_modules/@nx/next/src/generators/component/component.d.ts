import { Tree } from '@nx/devkit';
import type { SupportedStyles } from '@nx/react';
interface Schema {
    name: string;
    /**
     * @deprecated Provide the `directory` option instead and use the `as-provided` format. The project will be determined from the directory provided. It will be removed in Nx v18.
     */
    project?: string;
    style: SupportedStyles;
    directory?: string;
    /**
     * @deprecated Provide the `directory` option instead and use the `as-provided` format. This option will be removed in Nx v18.
     */
    flat?: boolean;
    /**
     * @deprecated Provide the `name` in pascal-case and use the `as-provided` format. This option will be removed in Nx v18.
     */
    pascalCaseFiles?: boolean;
    /**
     * @deprecated Provide the `directory` in pascal-case and use the `as-provided` format. This option will be removed in Nx v18.
     */
    pascalCaseDirectory?: boolean;
    nameAndDirectoryFormat?: 'as-provided' | 'derived';
    skipFormat?: boolean;
}
export declare function componentGenerator(host: Tree, schema: Schema): Promise<import("@nx/devkit").GeneratorCallback>;
export declare function componentGeneratorInternal(host: Tree, options: Schema): Promise<import("@nx/devkit").GeneratorCallback>;
export default componentGenerator;
